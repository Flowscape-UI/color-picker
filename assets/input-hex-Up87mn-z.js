import{R as E,j as p}from"./iframe-DEXx_Rvw.js";import{u as P,t as j,a as k,I as B,D as L,b as M}from"./use-hex-input-YmIulaup.js";import{a as R,I as o}from"./input-theme-CYF-iDsr.js";import{c as m}from"./cn-Bzm_o1ou.js";const g=E.forwardRef(({hexColor:c,handleChange:a,className:f,classNameInput:x,classNameIcon:h,disabled:r,isDisabledMouseEvent:d=!1,onIconClick:y,onIconPointerDown:I,onIconPointerUp:C,showAlpha:n=!1,...T},v)=>{const{localHex:e,handleHexInput:w,setIsEditing:t,setLocalHex:D}=P({hexColor:c,onChange:a,showAlpha:n}),H=j(c).toHex(),b=()=>{y?.(e)},{handlePointerDown:q}=k({orientation:"horizontal",onDragChange:(s,S)=>{let i=Math.round(S+s*55e3);i=Math.max(0,Math.min(16777215,i));const l=i.toString(16).padStart(6,"0").toUpperCase(),u=n&&e.length>=8?e.slice(6,8):"";D(l+u),a(n&&u?M(l+u):`#${l}`)},onDragStart:()=>{t(!0),I?.(e)},onDragEnd:()=>{t(!1),C?.(e)},disabled:r||d}),N=s=>{q(s,parseInt(H,16))};return p.jsxs(B,{className:f,children:[p.jsx(L,{onClick:b,onPointerDown:N,disabled:r,isDisabledMouseEvent:d,dragOrientation:"horizontal",className:m("font-bold font-mono text-base",o.light.icon,o.dark.icon,h),children:"#"}),p.jsx(R,{type:"text",className:m("w-full rounded-none border-none bg-transparent text-left px-2 py-0 h-full text-sm",o.light.input,o.dark.input,x),value:e.toLocaleUpperCase(),onChange:w,onFocus:()=>t(!0),onBlur:()=>t(!1),maxLength:n?8:6,disabled:r,ref:v,...T})]})});g.displayName="InputHex";g.__docgenInfo={description:"",methods:[],displayName:"InputHex",props:{hexColor:{required:!0,tsType:{name:"string"},description:""},handleChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(hexColor: string) => void",signature:{arguments:[{type:{name:"string"},name:"hexColor"}],return:{name:"void"}}},description:""},className:{required:!1,tsType:{name:"string"},description:""},classNameInput:{required:!1,tsType:{name:"string"},description:""},classNameIcon:{required:!1,tsType:{name:"string"},description:""},isDisabledMouseEvent:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onIconClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(hexColor: string) => void",signature:{arguments:[{type:{name:"string"},name:"hexColor"}],return:{name:"void"}}},description:""},onIconPointerDown:{required:!1,tsType:{name:"signature",type:"function",raw:"(hexColor: string) => void",signature:{arguments:[{type:{name:"string"},name:"hexColor"}],return:{name:"void"}}},description:""},onIconPointerUp:{required:!1,tsType:{name:"signature",type:"function",raw:"(hexColor: string) => void",signature:{arguments:[{type:{name:"string"},name:"hexColor"}],return:{name:"void"}}},description:""},showAlpha:{required:!1,tsType:{name:"boolean"},description:`Show and allow alpha channel input (another 2 hex symbols).
By default disabled (input only 6 symbols).`,defaultValue:{value:"false",computed:!1}}},composes:["Omit"]};export{g as I};
